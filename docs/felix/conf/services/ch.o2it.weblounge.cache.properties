# Configuration for the cache service which is used to cache responses to
# and speed up subsequent requests to the same resources.
#
# The default implementation of the cache uses ehcache (http://www.ehcache.org)
# as the backing implementation, so you might want to check the ehcache
# documentation if you need additional information.

# Whether the cache should be enabled. The default value is [true].
cache.enable=true

# Whether the disk store persists between restarts of the Virtual Machine. The
# default value is [false].
cache.diskPersistent=false

# Whether to collect statistics. You may want to choose to turn statistics off
# in favor of raw performance. The default is [true].
cache.statistics=true

# Sets the maximum number of objects that will be created in memory. 0 means no
# limit, which in turn means Integer.MAX_SIZE (2147483647). The default value
# is [1000].
cache.maxElementsInMemory=1000

# Sets the maximum number of objects that will be maintained in the DiskStore
# The default value is [0], meaning unlimited.
cache.maxElementsOnDisk=0

# Sets whether elements can overflow to disk when the memory store has reached
# the maxElementsInMemory limit. The default value is [true].
cache.overflowToDisk=true

# Sets the time to idle in seconds for an element before it expires, i.e. the
# maximum amount of time between accesses before an element expires. A value of
# 0 means that an Element can idle for infinity. The default value is [0].
cache.timeToIdle=0

# Sets the time to live in seconds for an element before it expires, i.e. the
# maximum time between creation time and when an element expires. A value of 0
# means that and Element can live for infinity. The default value is [86400].
cache.timeToLive=86400