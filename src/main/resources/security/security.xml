<beans xmlns="http://www.springframework.org/schema/beans" xmlns:sec="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:osgi="http://www.springframework.org/schema/osgi"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/osgi  
       http://www.springframework.org/schema/osgi/spring-osgi.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-3.0.xsd">

  <sec:http create-session="ifRequired" servlet-api-provision="true" realm="Weblounge"
    entry-point-ref="userEntryPoint">

    <!-- URL SECURITY -->

    <sec:intercept-url pattern="/**" filters="none"/>
    
    <!--
    <sec:intercept-url pattern="/**" access="ROLE_USER"/>
    -->
    
    <!-- Some resources are open to everybody -->
    <!--
    <sec:intercept-url pattern="/weblounge/favicon.ico" filters="none"/>
    <sec:intercept-url pattern="/weblounge/documentjs/**" filters="none"/>
    <sec:intercept-url pattern="/weblounge/funcunit/**" filters="none"/>
    <sec:intercept-url pattern="/weblounge/jquery/**" filters="none"/>
    <sec:intercept-url pattern="/weblounge/jqueryui/**" filters="none"/>
    <sec:intercept-url pattern="/weblounge/steal/**" filters="none"/>
    <sec:intercept-url pattern="/favicon.ico" filters="none"/>
    -->

    <!-- Secure the editor application -->
    <!--
    <sec:intercept-url pattern="/weblounge/login/**" access="ROLE_ANONYMOUS"/>
    <sec:intercept-url pattern="/weblounge/**" access="ROLE_USER"/>
    -->

    <!-- Enable anonymous access to the runtime information -->
    <!--
    <sec:intercept-url pattern="/system/weblounge/runtime" method="GET" access="ROLE_ANONYMOUS, ROLE_USER"/>
    -->
    
    <!-- Secure the management URLs for admins only -->
    <!--
    <sec:intercept-url pattern="/system/**" access="ROLE_ADMIN"/>
    -->

    <!-- Everything else is for any logged in user -->
    <!-- 
    <sec:intercept-url pattern="/**" access="ROLE_ANONYMOUS"/>
    -->
    
    <!-- LOGIN / LOGOUT MECHANISMS -->

    <!-- Enable and configure the failure URL for form-based logins -->

    <!-- Handle form authentication -->
    <!--
    <sec:custom-filter position="FORM_LOGIN_FILTER" ref="formAuthenticationFilter" />
    -->
    <sec:form-login login-page="/weblounge/login/login.html" login-processing-url="/system/weblounge/login/form" authentication-failure-url="/weblounge/login/error.html"/>
    
    <!--
    <sec:form-login authentication-failure-url="/weblounge/login/login.html?error" authentication-success-handler-ref="authSuccessHandler"/>
    -->

    <!-- Comment out to disable support for openID. OpenID URLs must be specified in the user detail service below -->
    <!--
    <sec:openid-login authentication-failure-url="/login.html?error" user-service-ref="userDetailsService"/>
    -->

    <!-- Digest auth is used to enable transparent clustering of services -->
    <!--
    <sec:custom-filter position="BASIC_AUTH_FILTER" ref="digestFilter"/>
    -->

    <!-- Enables "remember me" functionality -->
    <sec:remember-me key="weblounge" user-service-ref="userDetailsService"/>

    <!-- Set the request cache -->
    <sec:request-cache ref="requestCache"/>

    <!-- If any URLs are to be exposed to anonymous users, the "sec:anonymous" filter must be present -->
    <sec:anonymous/>

    <!-- Enables log out -->
    <sec:logout logout-url="/system/weblounge/logout"/>

  </sec:http>

  <!-- Authentication Entry and Exit Points -->

  <!-- Redirects unauthenticated requests to the login form -->
  <bean id="userEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
    <property name="loginFormUrl" value="/weblounge/login/login.html"/>
  </bean>

  <!-- 
  <bean id="authSuccessHandler" class="ch.entwine.weblounge.kernel.security.AuthenticationSuccessHandler">
    <property name="securityService" ref="securityService" />
    <property name="welcomePages">
      <map>
        <entry key="ROLE_ADMIN" value="/weblounge" />
        <entry key="ROLE_USER" value="/index.html" />
        <entry key="*" value="/index.html" />
      </map>
    </property>
  </bean>
  -->
  
  <!-- 
  <bean name="formAuthenticationFilter" class="ch.entwine.weblounge.kernel.security.SpringSecurityFormAuthentication">
    <constructor-arg index="0" ref="userDetailsService"/>
    <property name="authenticationManager" ref="authenticationManager"/>
  </bean>
  -->
 
  <!-- OSGI Integration -->
 
  <!-- Obtain services from the OSGI service registry -->
  <osgi:reference id="userDetailsService" cardinality="1..1" interface="org.springframework.security.core.userdetails.UserDetailsService"/>
  <!-- 
  <osgi:reference id="securityService" cardinality="1..1" interface="ch.entwine.common.security.SecurityService"/>
  -->

  <!-- Spring Security Internals -->

  <!-- The JPA user directory stores md5 hashed, salted passwords, so we must use a username-salted md5 password encoder. -->
  <sec:authentication-manager alias="authenticationManager">
    <sec:authentication-provider user-service-ref="userDetailsService">
      <sec:password-encoder hash="md5">
        <sec:salt-source user-property="username"/>
      </sec:password-encoder>
    </sec:authentication-provider>
  </sec:authentication-manager>

  <!-- Do not use a request cache -->
  <bean id="requestCache" class="org.springframework.security.web.savedrequest.NullRequestCache"/>

  <!-- Uncomment to enable logging interceptors -->
  <!-- bean class="org.springframework.security.access.event.LoggerListener" / -->
  <!-- bean class="org.springframework.security.authentication.event.LoggerListener" / -->

</beans>
